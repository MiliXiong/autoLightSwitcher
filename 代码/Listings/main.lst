C51 COMPILER V9.60.0.0   MAIN                                                              05/06/2021 17:10:13 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\keil5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(C:\Program File
                    -s (x86)\keil5\C51\INC\STC) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "stc8h.h" //
   2          sbit Hsensor=P3^2;
   3          sbit Touchout=P3^3;
   4          
   5          #define Pmotor(x) (P1=P1&0xf0|x)
   6          #define MOTOR_DELAY 30
   7          
   8          #define CONTROL_AUTO 1
   9          #define CONTROL_MANUAL 0
  10          
  11          #define LIGHT_ON 1
  12          #define LIGHT_OFF 0
  13          
  14          #define TOUCH_SHORT 2
  15          #define TOUCH_LONG 1
  16          #define TOUCH_INACTIVE 0
  17          
  18          #define SENSOR_ACTIVE 1
  19          #define SENSOR_INACTIVE 0
  20          
  21          #define WAIT_ON 1
  22          #define WAIT_OFF 0
  23          
  24          #define MOTOR_A 0x01
  25          #define MOTOR_AB 0x03
  26          #define MOTOR_B 0x02
  27          #define MOTOR_BC 0x06
  28          #define MOTOR_C 0x04
  29          #define MOTOR_CD 0x0C
  30          #define MOTOR_D 0x08
  31          #define MOTOR_DA 0x09
  32          #define MOTOR_DOWN 0x00
  33          
  34          #define MOTOR_STEP_GO 25
  35          #define MOTOR_STEP_BACK 45
  36          
  37          unsigned char light_state=LIGHT_OFF;
  38          unsigned char sensor_state=SENSOR_INACTIVE;
  39          unsigned char touch_state=TOUCH_INACTIVE;
  40          unsigned char control_mode=CONTROL_MANUAL;
  41          unsigned char wait_state=WAIT_OFF;
  42          
  43          void delay_ms(unsigned int interval)
  44          {
  45   1        int i,j;
  46   1          for(i=interval;i>0;i--)
  47   1            for(j=0;j<400;j++);
  48   1      }
  49          
  50          void motor(int step)
  51          {
  52   1        int ctn=0;
  53   1        P1M0|=0x0F;
  54   1        P1M1&=~0x0F;
C51 COMPILER V9.60.0.0   MAIN                                                              05/06/2021 17:10:13 PAGE 2   

  55   1        delay_ms(100); 
  56   1        if(step>0)
  57   1        {
  58   2          while(++ctn<=step){
  59   3            Pmotor(MOTOR_A);
  60   3            delay_ms(MOTOR_DELAY);
  61   3            Pmotor(MOTOR_AB);
  62   3            delay_ms(MOTOR_DELAY);
  63   3            Pmotor(MOTOR_B);
  64   3            delay_ms(MOTOR_DELAY);
  65   3            Pmotor(MOTOR_BC);
  66   3            delay_ms(MOTOR_DELAY);
  67   3            Pmotor(MOTOR_C);
  68   3            delay_ms(MOTOR_DELAY);
  69   3            Pmotor(MOTOR_CD);     
  70   3            delay_ms(MOTOR_DELAY);
  71   3            Pmotor(MOTOR_D);
  72   3            delay_ms(MOTOR_DELAY);
  73   3            Pmotor(MOTOR_DA);     
  74   3            delay_ms(MOTOR_DELAY);
  75   3          }
  76   2        }
  77   1        else{
  78   2          while(++ctn<=-step){
  79   3            Pmotor(MOTOR_D);
  80   3            delay_ms(MOTOR_DELAY);
  81   3            Pmotor(MOTOR_CD);     
  82   3            delay_ms(MOTOR_DELAY);
  83   3            Pmotor(MOTOR_C);
  84   3            delay_ms(MOTOR_DELAY);
  85   3            Pmotor(MOTOR_BC);
  86   3            delay_ms(MOTOR_DELAY);
  87   3            Pmotor(MOTOR_B);
  88   3            delay_ms(MOTOR_DELAY);
  89   3            Pmotor(MOTOR_AB);
  90   3            delay_ms(MOTOR_DELAY);
  91   3            Pmotor(MOTOR_A);
  92   3            delay_ms(MOTOR_DELAY);
  93   3            Pmotor(MOTOR_DA);
  94   3            delay_ms(MOTOR_DELAY);
  95   3          }
  96   2        }
  97   1        Pmotor(MOTOR_DOWN);
  98   1        P1M0&=~0x0F;
  99   1        P1M1|=0x0F;
 100   1      }
 101            
 102          
 103          void init_all()
 104          {
 105   1        // P3.2 sensor input and interrup.t (rising or fulling edge trigger)
 106   1        // high restance state by default
 107   1        IT0=0;
 108   1        EX0=1;
 109   1        
 110   1        // P3.3 touch pad input and interrup.t (rising edge trigger)
 111   1        // high restance state by default
 112   1        IT1=0;
 113   1        EX1=1;
 114   1        // P1 port should be set in output state before being used, and after that P1 should be set in high resit
             -ance state.
 115   1        // P1 port is at high resitance state by default.
C51 COMPILER V9.60.0.0   MAIN                                                              05/06/2021 17:10:13 PAGE 3   

 116   1      
 117   1        // TIMER
 118   1        //TMOD=0x00;
 119   1      
 120   1        EA=1;
 121   1      }
 122          
 123          void timer_start()
 124          {
 125   1        WKTCL=0xff;
 126   1        WKTCH=0x0f;
 127   1        WKTCH|=0x80;
 128   1      }
 129          
 130          void timer_stop()
 131          {
 132   1        WKTCH&=~0x80;
 133   1      }
 134          
 135          // sensor's interrup.t
 136          void int0_int() interrupt 0
 137          {
 138   1        EX0=0;
 139   1        //no operation, as the main program will judge the Hsensor pin
 140   1        EX0=1;
 141   1      }
 142          
 143          // touchpad's interrup.t
 144          void int1_int() interrupt 2
 145          {
 146   1        unsigned int ctn=0;
 147   1        EX1=0;
 148   1        delay_ms(30);
 149   1        if(Touchout==1){
 150   2          for(ctn=0;ctn<500;ctn++){
 151   3            delay_ms(30);
 152   3            if(Touchout==0){
 153   4              break;
 154   4            }
 155   3          }
 156   2          if(ctn<100){
 157   3            touch_state=TOUCH_SHORT;
 158   3          }
 159   2          else{
 160   3            touch_state=TOUCH_LONG;
 161   3          }
 162   2        }
 163   1        EX1=1;
 164   1      }
 165          
 166          void light_on()
 167          {
 168   1        if(light_state==LIGHT_OFF){
 169   2          light_state=LIGHT_ON;
 170   2          motor(-MOTOR_STEP_GO);
 171   2          motor(MOTOR_STEP_BACK);
 172   2        }
 173   1      }
 174          void light_off()
 175          {
 176   1        if(light_state==LIGHT_ON){
 177   2          light_state=LIGHT_OFF;
C51 COMPILER V9.60.0.0   MAIN                                                              05/06/2021 17:10:13 PAGE 4   

 178   2          motor(MOTOR_STEP_GO);
 179   2          motor(-MOTOR_STEP_BACK);
 180   2        }
 181   1      }
 182          void go_automode()
 183          {
 184   1        control_mode=CONTROL_AUTO;
 185   1        if(Hsensor==1){
 186   2          light_state=LIGHT_OFF;
 187   2          light_on();
 188   2        }else{
 189   2          light_state=LIGHT_ON;
 190   2          light_off();
 191   2        }
 192   1      }
 193          void go_manualmode()
 194          {
 195   1        timer_stop();
 196   1        wait_state=WAIT_OFF;
 197   1        control_mode=CONTROL_MANUAL;
 198   1        motor(-120);
 199   1      }
 200          
 201          
 202          
 203          void lowpower()
 204          {
 205   1        PCON=0x02;  // turn to "power down" mode
 206   1      }
 207          
 208          
 209          void main()
 210          {
 211   1        unsigned int sensor_inact_ctn=0;
 212   1      //  P1M0|=0x0F;
 213   1      //  P1M1&=~0x0F;
 214   1      //  P1=0xFF;
 215   1      //  while(1);
 216   1      //  while(1){
 217   1        delay_ms(1000);
 218   1        init_all();
 219   1      //  light_on();
 220   1      //  }
 221   1      
 222   1        while(1){
 223   2          switch(touch_state)
 224   2          {
 225   3            case TOUCH_SHORT:
 226   3              touch_state=TOUCH_INACTIVE;
 227   3              if(control_mode==CONTROL_MANUAL)
 228   3              {
 229   4                switch(light_state)
 230   4                {
 231   5                  case LIGHT_ON:
 232   5                    light_off();
 233   5                  break;
 234   5                  case LIGHT_OFF:
 235   5                    light_on();
 236   5                  break;
 237   5                }
 238   4              }
 239   3            break;
C51 COMPILER V9.60.0.0   MAIN                                                              05/06/2021 17:10:13 PAGE 5   

 240   3            case TOUCH_LONG:
 241   3              touch_state=TOUCH_INACTIVE;
 242   3              switch(control_mode)
 243   3              {
 244   4                case CONTROL_AUTO:
 245   4                  go_manualmode();
 246   4                break;
 247   4                case CONTROL_MANUAL:
 248   4                  go_automode();
 249   4                break;
 250   4              }
 251   3            break;
 252   3          }
 253   2          
 254   2          if(control_mode==CONTROL_AUTO){
 255   3              if(Hsensor==1){
 256   4                if(wait_state==WAIT_ON){
 257   5                  timer_stop();
 258   5                  wait_state=WAIT_OFF;
 259   5                }           
 260   4                light_on(); 
 261   4              }
 262   3              else if(Hsensor==0){
 263   4                if(wait_state==WAIT_OFF){
 264   5                  wait_state=WAIT_ON;
 265   5                  sensor_inact_ctn=0;
 266   5                  timer_start();
 267   5                }
 268   4                if (++sensor_inact_ctn>15){
 269   5                  timer_stop();
 270   5                  light_off();
 271   5                }
 272   4              }
 273   3          }
 274   2          lowpower();
 275   2          delay_ms(10); 
 276   2        }
 277   1        
 278   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    619    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
